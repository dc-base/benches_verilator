#!/bin/bash

if [ $# -ne 2 ]; then
	printf "Usage:\nmk_verilator_bench {top_module_name} {destination_name}\n"
	exit 0
fi
cat >> $2.cpp <<EOL
#include "V$1.h"
#include "verilated.h"
#include "verilated_vcd_c.h"

void tick(int tickCount, V$1 *tb, VerilatedVcdC* tfp){
	tb->eval();
	if(tfp){
		tfp->dumnp(tickcount * 10 - 2);
	}
	tb->clk = 1;
	tb->eval();
	if(tfp){
		tfp->dump(tickCount * 10 + 5);
		tfp->flush();
	}
}

#define MAX_CLOCKS 50
int main(int argc, char** argv, char** env){
	Verilated::traceEverOn(true);
	VerilatedVcdC* tfp = new VerilatedVcdC;
	tb->trace(tfp,99);
	tfp0>open("novas.vcd");
	tickCount = 0;
	for(int i = 0; i<MAX_CLOCKS; i++){
		thick(tickcount++; tb, tfp);
	}
	return 0;
}
EOL

printf "Using $1 top module, new skeleton verilator bench is in $2.cpp\n"
exit 0
